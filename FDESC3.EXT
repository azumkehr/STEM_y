
	INTEGER      FTYPE3D      ! file type
        INTEGER      CDATE3D      ! creation date   YYYYDDD
        INTEGER      CTIME3D      ! creation time    HHMMSS
        INTEGER      WDATE3D      ! update date     YYYYDDD
        INTEGER      WTIME3D      ! update time      HHMMSS
        INTEGER      SDATE3D      ! file start date YYYYDDD
        INTEGER      STIME3D      ! file start time  HHMMSS
        INTEGER      TSTEP3D      ! file time step   HHMMSS
        INTEGER      MXREC3D      ! maximum time step record number (1,2,...)
        INTEGER      NVARS3D      ! number of species
        INTEGER      NCOLS3D      ! number of grid columns
        INTEGER      NROWS3D      ! number of grid rows
        INTEGER      NLAYS3D      ! number of layers
        INTEGER      NTHIK3D      ! BOUNDARY:  perim thickness (cells)
                                  ! SPARSE MATRIX:  number of matrix-cols
        INTEGER      GDTYP3D      ! grid type:  1=LAT-LON, 2=Lambert, ...

!.......   Note that horizontal grid definition information is REAL*8 in order 
!.......   to achieve the required precision in geographic-to/from-grid
!.......   coordinate conversions.  Meanings of the map projection
!.......   specification parameters P_ALP3D, P_BET3D, P_GAM3D depend
!.......   upon the projection type, as follows:
!.......   
!.......   If P_ALP3D < AMISS3 (=-9E36, from PARMS3.EXT), then
!.......   the grid description is missing or invalid.
!.......
!.......   lat-lon:   unused.  Coordinate units are degrees, with
!.......              -180.0 < X <= 180.0,  -90.0 <= Y <= 90.0   
!.......              Note that Western hemisphere longitudes are taken 
!.......              to be negative.
!.......
!.......   Lambert    PROJ_ALPHA <= PROJ_BETA are the two latitudes which
!.......              determine the projection cone; PROJ_GAMMA is the
!.......              central meridian.  Coordinate units are meters.
!.......
!.......   (General) Mercator   PROJ_ALPHA and PROJ_BETA are the
!.......              latitude and longitude of the coordinate origin
!.......              (within the tangent circle);
!.......              PROJ_GAMMA is the angle between the cylinder axis
!.......              and the North polar axis. Coordinate units are meters.
!.......
!.......   (General Tangent) Stereographic   PROJ_ALPHA and PROJ_BETA are
!.......              the latitude and longitude of the point of tangency;
!.......              PROJ_GAMMA is the angle from true North to the Y-axis.
!.......              Coordinate units are meters.
!.......   
!.......   UTM:  PROJ_ALPHA is the UTM zone, as a double.
!.......              PROJ_BETA and PROJ_GAMMA are unused.
!.......              Note that for safety, PROJ_ALPHA should be
!.......              *>rounded<* to integer.
!.......              Coordinate units are meters.
!.......   
!.......   (Secant) Polar Stereographic:  PROJ_ALPHA is 1 for North Polar
!.......              -1 for South Polar, as a double.
!.......              PROJ_BETA is the secant latitude (latitude of
!.......              true scale).
!.......              PROJ_GAMMA is the Y-axis.
!.......              Note that for safety, PROJ_ALPHA should be
!.......              *>rounded<* to integer.
!.......              Coordinate units are meters.
!.......
!.......   Transverse Mercator   PROJ_ALPHA is the latitude of the origin.
!.......              PROJ_BETA is the scale factor at the central meridian;
!.......              PROJ_GAMMA is the longitude of the central meridian.
!.......              Coordinate units are meters.
!.......
!.......   Equatorial Mercator   PROJ_ALPHA is the latitude of true scale.
!.......              PROJ_BETA is unused.
!.......              PROJ_GAMMA is the longitude of the central meridian.
!.......              Coordinate units are meters.
!.......   
!.......   (XCENT3D,YCENT3D):
!.......   For Lat-Lon:  unused.
!.......   For UTM:  these are the UTM offsets in meters (UTM coords for
!.......   the origin relative to a UTM system with origin at the equator
!.......   and central metidian of the UTM zone).
!.......   For other projectionss (e.g., Lambert, Mercator, and Stereographic),
!.......   these are the longitude, -180 < X <= 180, and the
!.......   latitude, -90 <= Y <= 90, for the center (0,0) of the
!.......   respective Cartesian coordinate system.
!.......   
!.......   (XORIG3D,YORIG3D) are the location in map units (deg. for lat-lon,
!.......   meters otherwise) of the  lower-right corner of the origin (1,1) 
!.......   cell of the horizontal grid.
!.......   
!.......   (XCELL3D,YCELL3D) are the X-direction and Y-direction lengths
!.......   ((deg. for lat-lon, meters otherwise) of side for cells in a 
!.......   regular grid.  If zero, the grid is taken to be an irregular
!.......   grid described by other means (e.g. a grid-geometry file).
!.......   
!.......   VGTYP3D is the vertical grid type token, VGSIGP3 for sigma-P
!.......   coordinates, VGSIGZ3 for sigma-Z, etc., or IMISS3 for vertical
!.......   coordinates not stored in VGLVS3D (e.g., temporally or spatially
!.......   changing vertical coordinates.
!.......   
!.......   VGTOP3D is the model-top used in the definition of the sigma
!.......   coordinate systems (e.g., for hydrostatic sigma-P, the 
!.......   relationship between P and sigma is given by the following:
!.......   S = ( P - VGTOP3D ) / (P_ref - VGTOP3D )
!.......   
!.......   VGLVS3D( 1, ..., NLAYS3D+1 ) is the list of vertical coordinate 
!.......   values which specify the layers of the file.  In principle, 
!.......   layer K goes from VGLVS3D( K ) to VGLVS3D( K+1 ).

        REAL*8       P_ALP3D      ! first, second, third map
        REAL*8       P_BET3D      ! projection descriptive
        REAL*8       P_GAM3D      ! parameters.

        REAL*8       XCENT3D      ! lon for coord-system X=0
        REAL*8       YCENT3D      ! lat for coord-system Y=0
        REAL*8       XORIG3D      ! X-coordinate origin of grid (map units)
        REAL*8       YORIG3D      ! Y-coordinate origin of grid
        REAL*8       XCELL3D      ! X-coordinate cell dimension
        REAL*8       YCELL3D      ! Y-coordinate cell dimension

        INTEGER      VGTYP3D      !  vertical coordinate type (VGSIGP3, ...)
        REAL         VGTOP3D      !  model-top, for sigma coord types.
        REAL         VGLVS3D( MXLAYS3 + 1 )  !  vertical coord values.

        CHARACTER*16   GDNAM3D      ! grid name             (length NAMLEN3=16)
        CHARACTER*16   UPNAM3D      ! last program writing to file (NAMLEN3=16)
        CHARACTER*80   EXECN3D      ! value of env vble EXECUTION_ID

        CHARACTER*80   FDESC3D( MXDESC3 ) ! file description (MXDLEN3=80)
        CHARACTER*80   UPDSC3D( MXDESC3 ) ! update   "       (MXDLEN3=80)

        INTEGER        VTYPE3D( MXVARS3 ) ! variable type:  M3(INT|REAL|DBLE)
        CHARACTER*16   VNAME3D( MXVARS3 ) ! variable names (length MXDLEN3=80)
        CHARACTER*16   UNITS3D( MXVARS3 ) !   "   units or 'none' (MXDLEN3=80)
        CHARACTER*80   VDESC3D( MXVARS3 ) !   "      descriptions (MXDLEN3=80)

        !!  non-character file description data
        COMMON  / BDESC3 /                                              &
     &      P_ALP3D, P_BET3D, P_GAM3D, XCENT3D, YCENT3D,                &
     &      XORIG3D, YORIG3D, XCELL3D, YCELL3D,                         &
     &      FTYPE3D, CDATE3D, CTIME3D, WDATE3D, WTIME3D,                &
     &      SDATE3D, STIME3D, TSTEP3D, MXREC3D,                         &
     &      NVARS3D, NCOLS3D, NROWS3D, NLAYS3D, NTHIK3D,                &
     &      GDTYP3D, VGTYP3D, VGTOP3D, VGLVS3D, VTYPE3D

        !!  character-string file description data

        COMMON  / CDESC3 /                                              &
     &      GDNAM3D, UPNAM3D, EXECN3D, FDESC3D, UPDSC3D,                &
     &      VNAME3D, UNITS3D, VDESC3D

!................   end   FDESC3D.EXT   ....................................
! /bin/bash: VGTYP3D,: command not found
